# # - name: conigure payment server
# #   become: yes
# #   hosts: payment
# #   tasks:
# #   - name: install python3 packages
# #     ansible.builtin.dnf:
# #       name: "{{ item }}"
# #       state: installed
# #     loop:
# #     - python3 
# #     - gcc 
# #     - python3-devel

# #   - name: create app directory
# #     ansible.builtin.file:
# #       path: /app
# #       state: directory

# #   - name: create roboshop system user
# #     ansible.builtin.user:
# #       name: roboshop
# #       shell: /sbin/nologin
# #       system: true
# #       home: /app

# #   - name: download payment code
# #     ansible.builtin.get_url:
# #       url: https://roboshop-artifacts.s3.amazonaws.com/payment-v3.zip 
# #       dest: /tmp/payment.zip

# #   - name: extract payment code
# #     ansible.builtin.unarchive:
# #       src: /tmp/payment.zip
# #       dest: /app
# #       remote_src: yes

# #   - name: install dependencies
# #     ansible.builtin.pip:
# #       requirements: requirements.txt
# #       executable: pip3.9
# #     args:
# #       chdir: /app

# #   - name: copy payment service
# #     ansible.builtin.copy:
# #       src: payment.service
# #       dest: /etc/systemd/system/payment.service

# #   - name: daemon reload
# #     ansible.builtin.systemd_service:
# #       daemon_reload: true

# #   - name: enable and start payment
# #     ansible.builtin.service:
# #       name: payment
# #       state: started
# #       enabled: yes


# - name: conigure payment server
#   become: yes
#   hosts: payment
#   tasks:
#   - name: install python3 packages
#     ansible.builtin.dnf:
#       name: "{{ item }}"
#       state: installed
#     loop:
#     - python3 
#     - gcc 
#     - python3-devel

#   - name: create app directory
#     ansible.builtin.file:
#       path: /app
#       state: directory

#   - name: create roboshop system user
#     ansible.builtin.user:
#       name: roboshop
#       shell: /sbin/nologin
#       system: true
#       home: /app

#   - name: download payment code
#     ansible.builtin.get_url:
#       url: https://roboshop-artifacts.s3.amazonaws.com/payment-v3.zip 
#       dest: /tmp/payment.zip

#   - name: extract payment code
#     ansible.builtin.unarchive:
#       src: /tmp/payment.zip
#       dest: /app
#       remote_src: yes

#   - name: install dependencies
#     ansible.builtin.pip:
#       requirements: requirements.txt
#       executable: pip3.9
#     args:
#       chdir: /app

#   - name: copy payment service
#     ansible.builtin.copy:
#       src: payment.service
#       dest: /etc/systemd/system/payment.service

#   - name: daemon reload
#     ansible.builtin.systemd_service:
#       daemon_reload: true

#   - name: enable and start payment
#     ansible.builtin.service:
#       name: payment
#       state: started
#       enabled: yes


- name: configure payment server
  become: yes
  hosts: payment
  tasks:
    - name: install python3 packages
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      loop:
        - python3 
        - gcc 
        - python3-devel
        - python3-pip
        - pcre-devel

    - name: create roboshop system user
      ansible.builtin.user:
        name: roboshop
        shell: /sbin/nologin
        system: true
        home: /app
        create_home: yes

    - name: create app directory
      ansible.builtin.file:
        path: /app
        state: directory
        owner: roboshop
        group: roboshop
        mode: '0755'

    - name: download payment code
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/payment-v3.zip 
        dest: /tmp/payment.zip
        mode: '0644'

    - name: extract payment code
      ansible.builtin.unarchive:
        src: /tmp/payment.zip
        dest: /app
        remote_src: yes
        owner: roboshop
        group: roboshop

    - name: install uwsgi with dependencies
      ansible.builtin.pip:
        name: 
          - uwsgi
          - flask
        executable: pip3.9

    - name: install application dependencies
      ansible.builtin.pip:
        requirements: /app/requirements.txt
        executable: pip3.9

    - name: create payment.ini configuration file
      ansible.builtin.copy:
        content: |
          [uwsgi]
          module = payment:app
          master = true
          processes = 4
          socket = /tmp/payment.sock
          chmod-socket = 664
          vacuum = true
          die-on-term = true
          http = :8080
          uid = roboshop
          gid = roboshop
          chdir = /app
          logto = /var/log/payment.log
        dest: /app/payment.ini
        owner: roboshop
        group: roboshop
        mode: '0644'

    - name: create payment log file
      ansible.builtin.file:
        path: /var/log/payment.log
        state: touch
        owner: roboshop
        group: roboshop
        mode: '0644'

    - name: copy payment systemd service file
      ansible.builtin.copy:
        src: payment.service
        dest: /etc/systemd/system/payment.service
        owner: root
        group: root
        mode: '0644'

    - name: reload systemd daemon
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: enable and start payment service
      ansible.builtin.service:
        name: payment
        state: started
        enabled: yes

    - name: verify payment service is running
      ansible.builtin.wait_for:
        port: 8080
        host: localhost
        delay: 5
        timeout: 30