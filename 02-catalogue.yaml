- name: Configure catalogue component
  hosts: catalogue
  become: yes
  tasks:

    - name: Disable default NodeJS
      ansible.builtin.command:
        cmd: dnf module disable nodejs -y

    - name: Enable NodeJS 20
      ansible.builtin.command:
        cmd: dnf module enable nodejs:20 -y

    - name: Install NodeJS
      ansible.builtin.dnf:
        name: nodejs
        state: present

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Create roboshop system user
      ansible.builtin.user:
        name: roboshop
        shell: /sbin/nologin
        system: true
        home: /app

    - name: Download catalogue code
      ansible.builtin.get_url:
        url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
        dest: /tmp/catalogue.zip

    - name: Extract catalogue code
      ansible.builtin.unarchive:
        src: /tmp/catalogue.zip
        dest: /app
        remote_src: yes

    - name: Install dependencies
      community.general.npm:
        path: /app

    - name: Copy catalogue service to system directory
      ansible.builtin.copy:
        src: catalogue.service
        dest: /etc/systemd/system/catalogue.service

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Start and enable catalogue service
      ansible.builtin.service:
        name: catalogue
        state: started
        enabled: yes

    - name: Copy MongoDB repo
      ansible.builtin.copy:
        src: mongo.repo
        dest: /etc/yum.repos.d/mongo.repo

    - name: Install MongoDB client
      ansible.builtin.dnf:
        name: mongodb-mongosh
        state: present

    - name: Check if products are loaded
      ansible.builtin.command:
        cmd: mongosh --host mongodb.gurulabs.xyz --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
      register: catalogue_output

    - name: Print catalogue output
      ansible.builtin.debug:
        msg: "{{ catalogue_output.stdout }}"

    - name: Load products if not present
      ansible.builtin.shell:
        cmd: mongosh --host mongodb.gurulabs.xyz < /app/db/master-data.js
      when: catalogue_output.stdout | int < 0


# - name: Configure catalogue component
#   hosts: catalogue
#   become: yes
#   tasks:

#     - name: Ensure NodeJS 20 module is enabled
#       ansible.builtin.dnf_module:
#         name: nodejs
#         stream: '20'
#         state: present

#     - name: Install NodeJS
#       ansible.builtin.dnf:
#         name: nodejs
#         state: present

#     - name: Ensure /app directory exists
#       ansible.builtin.file:
#         path: /app
#         state: directory
#         owner: roboshop
#         group: roboshop
#         mode: '0755'

#     - name: Ensure roboshop system user exists
#       ansible.builtin.user:
#         name: roboshop
#         shell: /sbin/nologin
#         system: true
#         home: /app
#         create_home: yes

#     - name: Download catalogue code
#       ansible.builtin.get_url:
#         url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
#         dest: /tmp/catalogue.zip
#         mode: '0644'

#     - name: Extract catalogue code
#       ansible.builtin.unarchive:
#         src: /tmp/catalogue.zip
#         dest: /app
#         remote_src: yes
#         owner: roboshop
#         group: roboshop

#     - name: Install NodeJS dependencies
#       community.general.npm:
#         path: /app
#         state: present

#     - name: Copy catalogue systemd service file
#       ansible.builtin.copy:
#         src: catalogue.service
#         dest: /etc/systemd/system/catalogue.service
#         mode: '0644'

#     - name: Reload systemd daemon
#       ansible.builtin.systemd:
#         daemon_reload: yes

#     - name: Ensure catalogue service is started and enabled
#       ansible.builtin.service:
#         name: catalogue
#         state: started
#         enabled: yes

#     - name: Copy MongoDB repo
#       ansible.builtin.copy:
#         src: mongo.repo
#         dest: /etc/yum.repos.d/mongo.repo
#         mode: '0644'

#     - name: Install MongoDB client
#       ansible.builtin.dnf:
#         name: mongodb-mongosh
#         state: present

#     - name: Check if products database exists
#       ansible.builtin.command:
#         cmd: mongosh --host mongodb.gurulabs.xyz --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
#       register: catalogue_output
#       changed_when: false

#     - name: Load products if not present
#       ansible.builtin.shell:
#         cmd: mongosh --host mongodb.gurulabs.xyz < /app/db/master-data.js
#       when: catalogue_output.stdout | int < 0
