# - name: install redis component
#   hosts: redis
#   become: yes
#   tasks:
#   - name: disable redis default module
#     ansible.builtin.command: dnf module disable redis -y

#   - name: enable redis:7
#     ansible.builtin.command: dnf module enable redis:7 -y

#   - name: install redis
#     ansible.builtin.dnf:
#       name: redis
#       state: present

#   - name: allow remote locations
#     ansible.builtin.replace:
#       path: /etc/redis/redis.conf
#       regexp: '127.0.0.1'
#       replace: '0.0.0.0'

#   - name: disable protective mode
#     ansible.builtin.lineinfile:
#       path: /etc/redis/redis.conf
#       regexp: 'protected-mode'
#       line: protected-mode on

# # you can use replace instead of lineinfile â€” both modules can change text in files, but they serve slightly different purposes:
#   - name: enable and start redis
#     ansible.builtin.service:
#       name: redis
#       state: started
#       enabled: yes

- name: install redis component
  hosts: redis
  become: yes
  tasks:
    - name: disable redis default module
      ansible.builtin.command: dnf module disable redis -y

    - name: enable redis:7
      ansible.builtin.command: dnf module enable redis:7 -y

    - name: install redis
      ansible.builtin.dnf:
        name: redis
        state: present

    - name: allow remote locations
      ansible.builtin.replace:
        path: /etc/redis/redis.conf
        regexp: '^bind 127\.0\.0\.1'
        replace: 'bind 0.0.0.0'

    - name: disable protected mode
      ansible.builtin.lineinfile:
        path: /etc/redis/redis.conf
        regexp: '^protected-mode'
        line: 'protected-mode no'

    - name: enable and start redis
      ansible.builtin.service:
        name: redis
        state: started
        enabled: yes
